type User
  @model
  @auth(
    rules: [
      { allow: owner, ownerField: "owner" }
      { allow: groups, groups: ["admin"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  )
  @key(fields: ["username"]) {
  username: String!
  email: String!
  owner: String!
  uWindsorEmail: String
    @auth(
      rules: [
        { allow: owner, operations: [read] }
        { allow: groups, groups: ["admin"] }
        { allow: private, operations: [read] }
        { allow: public, operations: [read], provider: iam }
      ]
    )
  firstName: String
  lastName: String
  intro: String
  major: String
  avatarImgPath: String
  backGroundImgPath: String
  linkedin: String
  github: String
  tags: [String]
    @auth(
      rules: [
        { allow: owner, operations: [read] }
        { allow: groups, groups: ["admin"] }
        { allow: private, operations: [read] }
        { allow: public, operations: [read], provider: iam }
      ]
    )
  UserEducations: [UserEducation] @connection(name: "UserUserEducations")
  UserExperiences: [UserExperience] @connection(name: "UserUserExperiences")
}

type UserEducation
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  school: String!
  degree: String
  fieldOfStudy: String
  startDate: AWSDateTime
  endDate: AWSDateTime
  grade: Int
  description: String
  user: User! @connection(name: "UserUserEducations")
}
type UserExperience
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  title: String!
  employmentType: String
  companyName: String!
  location: String
  startDate: AWSDateTime
  endDate: AWSDateTime
  industry: String
  description: String
  user: User! @connection(name: "UserUserExperiences")
}

type Topic
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  )
  @key(fields: ["name"]) {
  name: String!
  like: [String]!
  unlike: [String]!
  articles: [Article] @connection(name: "TopicArticles")
}

type Type
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  )
  @key(fields: ["name"]) {
  name: String!
  like: [String]!
  unlike: [String]!
  articles: [Article] @connection(name: "TypeArticles")
  owner: String
}

type Article
  @model
  @key(
    name: "articlesByDate"
    fields: ["byDate", "createdAt"]
    queryField: "articlesByDate"
  )
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  title: String!
  content: String!
  imagePath: String
  like: [String]!
  unlike: [String]!
  topic: Topic! @connection(name: "TopicArticles")
  type: Type! @connection(name: "TypeArticles")
  ArticleComments: [ArticleComment] @connection(name: "ArticleArticleComments")
  byDate: String!
  createdAt: String!
}

type ArticleComment
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  content: String!
  like: [String]!
  unlike: [String]!
  article: Article! @connection(name: "ArticleArticleComments")
}

type Department
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  )
  @key(fields: ["name"]) {
  name: String!
  introduction: String
  email: String
  leader: String
  like: [String]!
  unlike: [String]!
  uwcssaJobs: [UwcssaJob] @connection(name: "DepartmentUwcssaJobs")
}

type UwcssaJob
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  introduction: String!
  title: String!
  requirements: [String]!
  Bonus: [String]!
  imagePath: String
  department: Department @connection(name: "DepartmentUwcssaJobs")
  Benefits: [String]!
  Schedule: [String]!
  like: [String]!
  unlike: [String]!
  uwcssaJobResumes: [UwcssaJobResume]
    @connection(name: "UwcssaJobUwcssaJobResumes")
}

type UwcssaJobResume
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  name: String!
  email: String!
  resumeFilePath: String
  phone: String!
  uwcssaJob: UwcssaJob! @connection(name: "UwcssaJobUwcssaJobResumes")
}

type ForumTopic
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  )
  @key(fields: ["name"]) {
  name: String!
  like: [String]!
  unlike: [String]!
  subTopics: [ForumSubTopic]! @connection(name: "ForumTopicForumSubTopic")
}

type ForumSubTopic
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  )
  @key(fields: ["name"]) {
  name: String!
  like: [String]!
  unlike: [String]!
  forumTopic: ForumTopic! @connection(name: "ForumTopicForumSubTopic")
  forumPosts: [ForumPost]! @connection(name: "ForumSubTopicForumPost")
}

type ForumPost
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  content: String!
  imagePath: String
  like: [String]!
  unlike: [String]!
  forumSubTopic: ForumSubTopic! @connection(name: "ForumSubTopicForumPost")
  forumPostComments: [ForumPostComment]!
    @connection(name: "ForumPostForumPostComment")
}

type ForumPostComment
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  content: String!
  like: [String]!
  unlike: [String]!
  forumPost: ForumPost! @connection(name: "ForumPostForumPostComment")
  forumPostSubComments: [ForumPostSubComment]!
    @connection(name: "ForumPostCommentForumPostSubComment")
}

type ForumPostSubComment
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  content: String!
  like: [String]!
  unlike: [String]!
  forumPostComment: ForumPostComment!
    @connection(name: "ForumPostCommentForumPostSubComment")
}

type MarketType
  # 卖东西，卖车，房屋租售，职位空缺
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  )
  @key(fields: ["name"]) {
  name: String!
  marketItems: [MarketItem] @connection(name: "MarketTypeMarketItems")
}
type MarketItemCategory
  # 工具，电子产品，保健
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  )
  @key(fields: ["name"]) {
  name: String!
  marketItems: [MarketItem] @connection(name: "MarketItemCategoryMarketItems")
}

type MarketItem
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  name: String!
  imagePath: [String]!
  title: String!
  price: Int
  description: String
  location: String
  marketType: MarketType! @connection(name: "MarketTypeMarketItems")
  condition: String
  marketItemCategory: MarketItemCategory!
    @connection(name: "MarketItemCategoryMarketItems")
  marketItemCar: MarketItemCar @connection(name: "MarketItemMarketItemCar")
  marketItemHome: MarketItemHome @connection(name: "MarketItemMarketItemHome")
}

type MarketItemCar
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  year: String!
  make: String!
  model: String!
  marketItem: MarketItem! @connection(name: "MarketItemMarketItemCar")
}

type MarketItemHome
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["admin", "staff"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  saleOrRent: String!
  property: String!
  bedroomCounts: Int!
  bathroomsCounts: Int!
  propertySize: Int
  laundryType: String
  airCondition: String
  heating: String
  marketItem: MarketItem! @connection(name: "MarketItemMarketItemHome")
}


